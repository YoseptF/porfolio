{"version":3,"sources":["components/presentational/Skybox.js","components/presentational/ContactGround.js","features/scene/index.js","components/containers/Controls.js","store/index.js","components/presentational/App.styles.js","components/containers/Menu.js","components/presentational/Box.js","components/presentational/Card.styles.js","components/presentational/CardInfo.js","components/presentational/Card.js","components/presentational/Keyboard.js","components/containers/Home.js","components/containers/Portfolio.js","components/presentational/ContactForm.styles.js","components/presentational/ContactForm.js","components/containers/App.js","components/containers/Contact.js","serviceWorker.js","index.js"],"names":["Skybox","scene","useThree","texture","CubeTextureLoader","load","background","ContactGround","usePlane","type","rotation","position","ref","sceneSlice","createSlice","name","initialState","currentScene","dragging","sceneEnum","1","2","3","centered","reducers","updateScene","state","payload","centre","decentre","toogleDragging","actions","selectScene","extend","OrbitControls","initialZ","window","screen","width","height","Controls","useSelector","dispatch","useDispatch","touchEnabled","navigator","maxTouchPoints","msMaxTouchPoints","useState","active","setActive","activeRef","useRef","current","controls","camera","gl","useSpring","to","x","y","z","standX","standY","setSpring","setCameraPosition","useCallback","target","useEffect","document","addEventListener","e","nodeName","useFrame","mouse","value","update","args","domElement","enablePan","enableRotate","Store","configureStore","reducer","sceneReducer","appear","keyframes","UI","styled","section","Menu","animated","ul","Button","button","props","title","Social","mouseX","followMouse","transform","interpolate","mX","handleClick","dataset","data-scene","style","onClick","className","href","Box","map","useLoader","TextureLoader","useBox","mass","Math","PI","random","api","onPointerUp","velocity","set","angularVelocity","attach","defaultProps","CardInfo","article","demo","github","data-link","Card","vertical","double","layer","size","THREE","Object","values","dataLink","includes","open","layers","onPointerOver","center","Keyboard","GLTFLoader","materials","nodes","scale","material","TextKey","geometry","whole_5","whole_0","color","Home","Portfolio","FormWrapper","ContactForm","form","image","action","method","placeholder","required","autoComplete","standZInit","Contact","App","fov","shadowMap","margin","padding","left","top","right","bottom","store","intensity","iterations","tolerance","defaultContactMaterial","friction","restitution","contactEquationStiffness","contactEquationRelaxation","frictionEquationStiffness","frictionEquationRelaxation","gravity","allowSleep","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.ec9e7801.chunk.js","sourcesContent":["import { useThree } from 'react-three-fiber';\nimport { CubeTextureLoader } from 'three';\n\nconst Skybox = () => {\n  const { scene } = useThree();\n  const loader = new CubeTextureLoader();\n\n  const texture = loader.load([\n    'https://i.imgur.com/z4BOzwJ.png',\n    'https://i.imgur.com/z4BOzwJ.png',\n    'https://i.imgur.com/z4BOzwJ.png',\n    'https://i.imgur.com/z4BOzwJ.png',\n    'https://i.imgur.com/z4BOzwJ.png',\n    'https://i.imgur.com/z4BOzwJ.png',\n\n  ]);\n\n  scene.background = texture;\n  return null;\n};\n\nexport default Skybox;\n","import React from 'react';\nimport { usePlane } from 'use-cannon';\n\nconst ContactGround = () => {\n  const [ref] = usePlane(() => ({\n    type: 'Static', rotation: [0, 0, 0], position: [0, 0, -10],\n  }));\n\n  return (\n    <mesh ref={ref} />\n  );\n};\n\nexport default ContactGround;\n","import { createSlice } from '@reduxjs/toolkit';\n\nconst sceneSlice = createSlice({\n  name: 'scene',\n  initialState: {\n    currentScene: 1,\n    dragging: false,\n    sceneEnum: {\n      1: [-20, 10],\n      2: [100, 100],\n      3: [-200, 200],\n    },\n    centered: true,\n  },\n  reducers: {\n    updateScene: (state, { payload }) => { state.currentScene = payload; },\n    centre: state => { state.centered = true; },\n    decentre: state => { state.centered = false; },\n    toogleDragging: state => { state.dragging = !state.dragging; },\n  },\n});\n\nexport const {\n  updateScene, centre, decentre, toogleDragging,\n} = sceneSlice.actions;\n\nexport const selectScene = ({ scene: { sceneEnum, currentScene } }) => (\n  [sceneEnum[currentScene], currentScene]\n);\nexport const selectCentered = state => state.scene.centered;\nexport const selectDragging = state => state.scene.dragging;\n\nexport default sceneSlice.reducer;\n","import React, {\n  useCallback, useEffect, useRef, useState,\n} from 'react';\nimport { useFrame, useThree, extend } from 'react-three-fiber';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport { useSpring } from 'react-spring/three';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  selectScene, updateScene,\n} from '../../features/scene';\n\nextend({ OrbitControls });\n\nconst { width, height } = window.screen;\nlet initialZ;\nif (width > height) { initialZ = 20; } else initialZ = 45;\n\nconst Controls = () => {\n  const [scene] = useSelector(selectScene);\n  const dispatch = useDispatch();\n\n  const touchEnabled = ('ontouchstart' in window)\n  || (navigator.maxTouchPoints > 0)\n  || (navigator.msMaxTouchPoints > 0);\n\n  const [active, setActive] = useState(false);\n  const activeRef = useRef();\n  activeRef.current = active;\n\n  const controls = useRef();\n  const { camera, gl } = useThree();\n\n  const [{\n    x, y, standX, standY,\n  }, setSpring] = useSpring(() => ({\n    to: {\n      x: 0,\n      y: 0,\n      z: 0,\n      standX: 0,\n      standY: 0,\n    },\n  }));\n\n  const setCameraPosition = useCallback(() => {\n    if (scene) {\n      const [x, y] = scene;\n      setSpring({\n        standX: x,\n        standY: y,\n      });\n      controls.current.target.y = initialZ;\n    }\n  }, [scene, setSpring]);\n\n  useEffect(() => {\n    document.addEventListener('pointerdown', e => {\n      if (e.target.nodeName === 'CANVAS') {\n        setActive(true);\n      }\n    });\n    document.addEventListener('pointerup', e => {\n      if (e.target.nodeName === 'CANVAS') {\n        setActive(false);\n        dispatch(updateScene(0));\n      }\n    });\n    // eslint-disable-next-line\n  }, []);\n\n  useEffect(() => {\n    setCameraPosition();\n  }, [setCameraPosition]);\n\n  useFrame(({ mouse }) => {\n    if (!activeRef.current) {\n      camera.position.x = standX.value - x.value;\n      camera.position.y = standY.value - y.value;\n      controls.current.target.x = standX.value;\n      controls.current.target.y = standY.value;\n    } else {\n      standX.value = controls.current.target.x;\n      standY.value = controls.current.target.y;\n      setSpring({\n        standX: controls.current.target.x,\n        standY: controls.current.target.y,\n        x: standX.value - camera.position.x,\n        y: standY.value - camera.position.y,\n      });\n    }\n    if (!touchEnabled) {\n      setSpring({\n        x: mouse.x,\n        y: mouse.y,\n      });\n    }\n\n    controls.current.update();\n  });\n  return (\n    <orbitControls\n      ref={controls}\n      args={[camera, gl.domElement]}\n      // enableDamping\n      // dampingFactor={0.05}\n      // rotateSpeed={0.6}\n      enablePan\n      enableRotate={false}\n    />\n  );\n};\n\nexport default Controls;\n","import { configureStore } from '@reduxjs/toolkit';\nimport sceneReducer from '../features/scene';\n\nconst Store = configureStore({\n  reducer: {\n    scene: sceneReducer,\n  },\n});\n\nexport default Store;\n","import styled, { keyframes } from 'styled-components';\nimport { animated } from 'react-spring';\n\nconst appear = keyframes`\n  50%,\n  0% {\n    transform: scale(0) translate(0.7rem,0px);\n  }\n  100%{\n    transform: scale(1) translate(0.7rem,0px);\n  }\n`;\n\nconst UI = styled.section`\n  background: #181818;\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n  align-items:center;\n  justify-content: center;\n  @media only screen and (orientation: portrait){\n    flex-direction: row;\n    height: 70px;\n    width: 100vw;\n  }\n`;\n\nconst Menu = styled(animated.ul)`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  list-style: none;\n  flex-grow: 1;\n  padding: 0.4rem;\n  @media only screen and (orientation: portrait){\n    flex-direction: row;\n  }\n`;\n\nconst Button = styled(animated.button)`\n  font-weight: bold;\n  text-align :center;\n  margin: 1rem;\n  background: none;\n  border: none;\n  &:focus{\n      outline: none;\n    }\n  i{\n    cursor: pointer;\n    color: #08fdd8;\n    font-size: 1.3rem;\n    transform: scale(1) rotate(0deg);\n    transition: transform 300ms ease-in-out, color 300ms ease-in-out;\n    &:focus{\n      outline: none;\n    }\n    &:after{\n      position: absolute;\n      content: '${props => props.title}';\n      font-family: Roboto, serif;\n      letter-spacing: 1px;\n      transform: scale(0);\n    }\n    &:hover{\n      transform: scale(2) rotate(365deg);\n      color: #fff;\n      &:after{\n        animation: ${appear} 500ms forwards;\n        @media only screen and (orientation: portrait){\n        display: none;\n        }\n      }\n    }\n  }\n`;\n\nconst Social = styled.ul`\n  list-style: none;\n  border-top: 1px solid #08fdd8;\n  display: flex;\n  flex-direction: column;\n  i{\n    cursor: pointer;\n    text-align :center;\n    margin: 1rem;\n    background: none;\n    border: none;\n    font-size: 1.3rem;\n    transform: scale(1);\n    transition: transform 300ms ease-in-out;\n    &:hover{\n    transform: scale(2)\n    }\n  }\n  a{\n    color: #08fdd8;\n    transform: scale(1) rotate(0deg);\n    transition: transform 300ms ease-in-out, color 300ms ease-in-out;\n    @media only screen and (orientation: portrait){\n      margin: 0 1rem;\n    }\n  }\n  @media only screen and (orientation: portrait){\n  border-top: none;\n  border-left: 1px solid #08fdd8;\n  flex-direction: row;\n  margin: 0 1rem;\n  i{\n    margin: 0;\n  }\n  }\n`;\n\nexport {\n  Menu, UI, Button, Social,\n};\n","import { HTML } from 'drei';\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useSpring } from 'react-spring';\nimport { useFrame } from 'react-three-fiber';\nimport { updateScene } from '../../features/scene';\nimport * as S from '../presentational/App.styles';\n\nconst Menu = () => {\n  const [{ mouseX }, setSpring] = useSpring(() => ({\n    mouseX: 0,\n  }));\n  const dispatch = useDispatch();\n\n  useFrame(({ mouse }) => {\n    setSpring({\n      mouseX: mouse.x,\n    });\n  });\n\n  const followMouse = {\n    transform: mouseX.interpolate(mX => `rotate3d(0,1,0,${mX * 25}deg)`),\n  };\n\n  const handleClick = e => {\n    dispatch(updateScene(+e.target.dataset.scene));\n  };\n\n  return (\n    <HTML>\n      <S.UI>\n        <S.Menu>\n          <li>\n            <S.Button data-scene={1} type=\"button\" style={followMouse} title=\"Home\" onClick={handleClick}>\n              <i className=\"fas fa-home\" data-scene={1} />\n            </S.Button>\n          </li>\n          <li>\n            <S.Button data-scene={2} type=\"button\" style={followMouse} title=\"Portfolio\" onClick={handleClick}>\n              <i className=\"fas fa-folder\" data-scene={2} />\n            </S.Button>\n          </li>\n          <li>\n            <S.Button data-scene={3} type=\"button\" style={followMouse} title=\"Portfolio\" onClick={handleClick}>\n              <i className=\"fas fa-envelope-open\" data-scene={3} />\n            </S.Button>\n          </li>\n        </S.Menu>\n        <S.Social>\n          <li>\n            <a href=\"https://www.linkedin.com/in/joseph-flores-vega/\">\n              <i className=\"fab fa-linkedin\" />\n            </a>\n          </li>\n          <li>\n            <a href=\"https://github.com/YoseptF\">\n              <i className=\"fab fa-github-square\" />\n            </a>\n          </li>\n          <li>\n            <a href=\"https://twitter.com/Yosept__\">\n              <i className=\"fab fa-twitter-square\" />\n            </a>\n          </li>\n        </S.Social>\n      </S.UI>\n    </HTML>\n  );\n};\n\nexport default Menu;\n","/* eslint-disable global-require */\nimport { useBox } from 'use-cannon';\nimport React from 'react';\nimport PropTypes, { number } from 'prop-types';\nimport { useLoader } from 'react-three-fiber';\nimport { TextureLoader } from 'three';\n\nconst Box = ({ position, texture }) => {\n  const map = useLoader(TextureLoader, `cubes/${texture}.png`);\n  // Register box as a physics body with mass\n  const [ref, api] = useBox(() => ({\n    mass: 3000,\n    position,\n    rotation: [\n      Math.PI / (Math.random() * 2),\n      Math.PI / (Math.random() * 2),\n      Math.PI / (Math.random() * 2),\n    ],\n  }));\n\n  const handleClick = () => {\n    api.velocity.set(0, 0, 35);\n    api.angularVelocity.set(\n      (Math.random() * 20) - 10,\n      (Math.random() * 20) - 10,\n      (Math.random() * 20) - 10,\n    );\n  };\n\n  return (\n    <mesh ref={ref} onPointerUp={handleClick}>\n      <boxBufferGeometry attach=\"geometry\" args={[5, 5, 5]} />\n      <meshPhongMaterial attach=\"material\" map={map} />\n    </mesh>\n  );\n};\n\nBox.defaultProps = {\n  position: [0, 0, 0],\n  texture: 'placeholder',\n};\n\nBox.propTypes = {\n  position: PropTypes.arrayOf(number),\n  texture: PropTypes.string,\n};\n\nexport default Box;\n","import styled, { keyframes } from 'styled-components';\n\nconst appear = keyframes`\n  0%{\n    transform: scale(0);\n  }\n  100%{\n    transform: scale(1);\n  }\n`;\n\nconst CardInfo = styled.article`\n  background: white;\n  animation: ${appear} 500ms forwards ease-in-out;\n  display: flex;\n  padding: 10px;\n  border-radius: 11px;\n  a{\n    background: red;\n  }\n  i{\n    font-size: 2.5vmax;\n    margin: 10px;\n    color: #1d1d1d;\n    transform: scale(1);\n    transition: transform 300ms ease-in-out;\n    &:hover{\n      transform: scale(2);\n      color: gold;\n    }\n  }\n`;\n\nexport { CardInfo };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport * as S from './Card.styles';\n\nconst CardInfo = ({ demo, github }) => (\n  <S.CardInfo>\n    <div>\n      <i className=\"fas fa-external-link-alt cardI\" data-link={demo} />\n    </div>\n    <div>\n      <i className=\"fab fa-github cardI\" data-link={github} />\n    </div>\n  </S.CardInfo>\n);\n\nCardInfo.defaultProps = {\n  demo: 'https://www.google.com',\n  github: 'https://www.google.com',\n};\n\nCardInfo.propTypes = {\n  demo: PropTypes.string,\n  github: PropTypes.string,\n};\n\nexport default CardInfo;\n","import React, { useState } from 'react';\nimport * as THREE from 'three';\nimport { useLoader } from 'react-three-fiber';\nimport { useBox } from 'use-cannon';\nimport PropTypes, { number } from 'prop-types';\nimport { Html } from 'drei';\nimport CardInfo from './CardInfo';\n\nconst Card = ({\n  texture, position, vertical, double, demo, github, layer, random, size,\n}) => {\n  const map = useLoader(THREE.TextureLoader, `cards/${texture}.png`);\n  const [active, setActive] = useState(false);\n  const [ref, api] = useBox(() => ({\n    mass: 1e4,\n    position,\n    rotation: [\n      0,\n      0,\n      vertical ? Math.PI / ((Math.random() * 0.4) + 1.8)\n        : Math.PI / ((Math.random() * 0.006) + 0.247),\n    ],\n  }));\n\n  const handleClick = e => {\n    const [{ type }, { 'data-link': dataLink, className = '' }] = Object.values(e.target);\n    if (className.includes('cardI')) window.open(dataLink, '_blank');\n    if (type === 'canvas') {\n      api.velocity.set(0, 0, 25);\n      api.angularVelocity.set(0, 0, (Math.random() * 2) - 1);\n      setActive(!active);\n    }\n  };\n\n  const shake = () => {\n    api.velocity.set(0, 0, 7);\n    api.angularVelocity.set((\n      Math.random() * 1) - 0.5,\n    (Math.random() * 1) - 0.5,\n    0);\n  };\n\n  return (\n    <mesh ref={ref} onPointerUp={handleClick} layers={layer} onPointerOver={shake}>\n      <boxBufferGeometry attach=\"geometry\" args={size} />\n      <meshPhongMaterial attach=\"material\" map={map} />\n      {(active && double) && (\n      <Html center>\n        <CardInfo demo={demo} github={github} />\n      </Html>\n      )}\n    </mesh>\n  );\n};\n\nCard.propTypes = {\n  texture: PropTypes.string,\n  position: PropTypes.arrayOf(number),\n  vertical: PropTypes.bool,\n  double: PropTypes.bool,\n  demo: PropTypes.string,\n  github: PropTypes.string,\n  random: PropTypes.bool,\n  size: PropTypes.arrayOf(number),\n};\n\nCard.defaultProps = {\n  texture: 'placeholder',\n  position: [0, 0, 0],\n  vertical: false,\n  double: false,\n  demo: 'https://google.com',\n  github: 'https://github.com/YoseptF',\n  random: false,\n  size: [43, 20, 0],\n};\n\nexport default Card;\n","import React from 'react';\nimport { useLoader } from 'react-three-fiber';\nimport { useBox } from 'use-cannon';\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\nimport PropTypes, { number } from 'prop-types';\n\nconst Keyboard = ({ position }) => {\n  const [ref, api] = useBox(() => ({\n    mass: 1e4,\n    args: [1, 1, 1],\n    rotation: [Math.PI / 2, Math.PI / 0.9, 0],\n    position,\n\n  }));\n\n  const { materials, nodes } = useLoader(GLTFLoader, '/objects/Keyboard.glb');\n\n  const handleClick = () => {\n    api.angularVelocity.set(0, 0, (Math.random() * 1) - 0.5);\n    api.velocity.set(0, 0, 25);\n  };\n\n  return (\n    <mesh ref={ref} onPointerUp={handleClick}>\n      <group scale={[25, 1, 11]}>\n        <mesh material={materials.TextKey} geometry={nodes.whole_5.geometry} />\n        <mesh geometry={nodes.whole_0.geometry}>\n          <meshBasicMaterial attach=\"material\" color=\"#675959\" />\n        </mesh>\n      </group>\n    </mesh>\n  );\n};\n\nKeyboard.defaultProps = {\n  position: [-45, 30, 0],\n};\n\nKeyboard.propTypes = {\n  position: PropTypes.arrayOf(number),\n};\n\nexport default Keyboard;\n","import React from 'react';\nimport Box from '../presentational/Box';\nimport Card from '../presentational/Card';\nimport Keyboard from '../presentational/Keyboard';\n\nconst Home = () => (\n  <>\n    <Keyboard />\n    <Card texture=\"presentation\" />\n    <Card texture=\"happy\" size={[20, 20, 0]} position={[0, 40, 0]} />\n    <Box position={[-30, 0, 0]} texture=\"react\" />\n    <Box position={[-45, -10, 0]} texture=\"javascript\" />\n    <Box position={[-40, 10, 0]} texture=\"rails\" />\n  </>\n\n);\n\nexport default Home;\n","import React from 'react';\nimport Card from '../presentational/Card';\n\nconst Portfolio = () => (\n  <>\n    <Card\n      position={[120, 110, 0]}\n      texture=\"myeat\"\n      double\n      demo=\"https://my-eat-list.netlify.app/\"\n      github=\"https://github.com/YoseptF/my-eat-list-frontend\"\n    />\n    <Card texture=\"workout\" size={[20, 20, 0]} position={[165, 120, 0]} />\n    <Card\n      position={[130, 80, 0]}\n      texture=\"twitch\"\n      double\n      demo=\"https://twitch-points-suite.netlify.app/\"\n      github=\"https://github.com/YoseptF/Twitch-Points-Song-Request\"\n    />\n    <Card\n      position={[110, 50, 0]}\n      texture=\"lifestyle\"\n      double\n      demo=\"https://aqueous-springs-55430.herokuapp.com/\"\n      github=\"https://github.com/YoseptF/lifestyle\"\n    />\n    <Card texture=\"coffe\" size={[20, 20, 0]} position={[165, 30, 0]} />\n    <Card\n      position={[60, 120, 0]}\n      texture=\"jumper\"\n      vertical\n      double\n      demo=\"https://endless-jumper.netlify.app/\"\n      github=\"https://github.com/YoseptF/Endless-Jumper\"\n    />\n    <Card\n      position={[70, 80, 0]}\n      texture=\"animal\"\n      double\n      demo=\"https://acnh-catalog.herokuapp.com/\"\n      github=\"https://github.com/YoseptF/acnh-catalog\"\n    />\n    <Card\n      position={[60, 40, 0]}\n      texture=\"game\"\n      double\n      demo=\"https://gamesxchange.herokuapp.com/\"\n      github=\"https://github.com/YoseptF/gamexchange\"\n    />\n  </>\n\n);\n\nexport default Portfolio;\n","import styled from 'styled-components';\n\nconst FormWrapper = styled.section`\n  width: 100vw;\n  max-width: 360px;\n  background: white;\n  transform: translate(0,2rem);\n  @media only screen and (min-width: 768px){\n  max-width: 540px;\n  }\n`;\n\nconst ContactForm = styled.form`\n  display: flex;\n  flex-direction: column;\n  padding: 2rem;\n  header{\n    display: flex;\n    align-items: center;\n    .image{\n    width: 10vmax;\n    height: 10vmax;\n    background: ${props => `url(${props.image})`} center center/cover no-repeat;\n  }\n  }\n\n  input{\n    font-weight: bold;\n  }\n\n  input, textarea{\n      border: 1px solid black;\n      border-radius: 11px;\n      font-size: 2vh;\n      margin: 0.7rem;\n      padding: 1vh;\n      line-height: 2vh;\n      &:focus{\n      outline: none;\n      }\n  }\n\n  textarea{\n    min-height: 190px;\n  }\n`;\n\nexport { FormWrapper, ContactForm };\n","import { Html } from 'drei';\nimport React from 'react';\nimport PropTypes, { number } from 'prop-types';\nimport * as S from './ContactForm.styles';\n\nconst ContactForm = ({ position }) => (\n  <Html position={position} center>\n    <S.FormWrapper>\n      <S.ContactForm action=\"https://formspree.io/xvovpedq\" method=\"POST\" image=\"https://i.imgur.com/tp2D1KG.png\">\n        <header>\n          <div className=\"image\" />\n          <h1>Send me a message!</h1>\n        </header>\n        <input name=\"email\" type=\"email\" placeholder=\"your@mail.com\" required autoComplete=\"off\" />\n        <input name=\"subject\" type=\"text\" placeholder=\"subject\" required autoComplete=\"off\" />\n        <textarea name=\"message\" required autoComplete=\"off\" />\n        <input name=\"submitButton\" type=\"submit\" value=\"Send!\" />\n      </S.ContactForm>\n    </S.FormWrapper>\n  </Html>\n);\n\nContactForm.defaultProps = {\n  position: [-200, 200, 0],\n};\n\nContactForm.propTypes = {\n  position: PropTypes.arrayOf(number),\n};\n\nexport default ContactForm;\n","import React from 'react';\nimport './App.css';\nimport { Canvas } from 'react-three-fiber';\nimport { Physics } from 'use-cannon';\nimport { Provider } from 'react-redux';\nimport Skybox from '../presentational/Skybox';\nimport ContactGround from '../presentational/ContactGround';\nimport Controls from './Controls';\nimport Store from '../../store';\nimport Menu from './Menu';\nimport Home from './Home';\nimport Portfolio from './Portfolio';\nimport Contact from './Contact';\n\nconst { width, height } = window.screen;\nlet standZInit;\nif (width > height) { standZInit = 20; } else standZInit = 45;\n\nconst App = () => (\n  <Canvas\n    camera={{ position: [0, 0, standZInit], fov: 110 }}\n    shadowMap\n    style={{\n      position: 'fixed',\n      margin: 0,\n      padding: 0,\n      left: 0,\n      top: 0,\n      right: 0,\n      bottom: 0,\n    }}\n  >\n    <Provider store={Store}>\n\n      <Skybox />\n      <Controls />\n      <ambientLight intensity={0.7} />\n\n      <Physics\n        iterations={20}\n        tolerance={0.0001}\n        defaultContactMaterial={{\n          friction: 1,\n          restitution: 0,\n          contactEquationStiffness: 1e7,\n          contactEquationRelaxation: 1,\n          frictionEquationStiffness: 1e7,\n          frictionEquationRelaxation: 2,\n\n        }}\n        gravity={[0, 0, -70]}\n        allowSleep={false}\n      >\n        <ContactGround />\n        <Home />\n        <Portfolio />\n        <Contact />\n      </Physics>\n      <Menu />\n    </Provider>\n  </Canvas>\n);\n\nexport default App;\n","import React from 'react';\nimport Card from '../presentational/Card';\nimport ContactForm from '../presentational/ContactForm';\nimport Keyboard from '../presentational/Keyboard';\n\nconst Contact = () => (\n  <>\n    <Keyboard position={[-250, 230, 0]} />\n    <Card texture=\"call\" size={[20, 20, 0]} position={[-150, 230, 0]} />\n    <ContactForm position={[-200, 200, 0]} />\n    <Card texture=\"cool\" size={[20, 20, 0]} position={[-150, 165, 0]} />\n    <Card texture=\"coffe\" size={[20, 20, 0]} position={[-250, 180, 0]} />\n  </>\n);\n\nexport default Contact;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/containers/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}